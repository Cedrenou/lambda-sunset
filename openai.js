const axios = require("axios");
const config = require("./config");

exports.generateDescriptions = async (product) => {
    console.log("üìù G√©n√©ration de descriptions pour le produit :", product);
    const prompt = `
    IMPORTANT :
- NE FOURNIS AUCUNE MISE EN FORME MARKDOWN (pas de balises ou blocs de type "code").
- N'AJOUTE AUCUN TEXTE AVANT OU APR√àS LE JSON.
- Fournis uniquement le JSON valide.

Ton objectif est de cr√©er une description marketing attrayante et d√©taill√©e pour une fiche produit WooCommerce.

Donn√©es du produit :
Nom : ${product.nom_produit}
Cat√©gorie : ${product.categorie}
Taille : ${product.taille}
√âtat : ${product.etat}
Style : ${product.type}

Voici le format que tu dois respecter dans ta r√©ponse :
{
    "longdesc": "Description longue (300 mots min ‚Äì Optimis√©e SEO Yoast)
    Structure :
Un sous-titre avec le format : <strong>Nom du produit ‚Äì √âtat</strong> (ex. : Alpinestars Andes ‚Äì Tr√®s bon √©tat)
\\n
Introduction directe avec une expression cl√© (ex. : blouson moto cuir seconde main femme, pantalon moto d‚Äôoccasion, v√™tement moto reconditionn√©, etc.). L'expression cl√© doit appara√Ætre au moins deux fois.
Texte structur√© avec phrases courtes (< 20 mots dans 75 % des cas).
Voix active (90 % min.).
Description personnalis√©e selon le type (blouson, pantalon, chaussures, protections, etc.) En t'aidant des informations suivantes : ${product.indications}.


‚úÖ <strong>Avantages</strong>
‚Ä¢ Premier avantage
‚Ä¢ Deuxi√®me avantage
‚Ä¢ Troisi√®me avantage

üîó <strong><a href="https://sunsetridershop.com/guide-des-tailles/" target="_blank" rel="noopener noreferrer"><u>Guide des tailles</u></a>
</strong>

üõ†Ô∏è <strong>Engagements Sunset Rider</strong>
100% Satisfait ou Rembours√©. \\n
Tous nos articles de seconde main sont nettoy√©s et d√©sinfect√©s. \\n
Les mod√®les en cuir sont √©galement graiss√©s, cir√©s et r√©imperm√©abilis√©s. \\n
\n
üì© Pour toute question : info@sunsetridershop.com",
   "shortdesc": "
   IMPORTANT : Si une donn√© est manquante, ne pas afficher du tout la donn√©e.
   Structure :  
‚Ä¢ Taille : ${product.taille} ${product.genre} (Mesures en photo)
‚Ä¢ √âtat : ${product.etat}
‚Ä¢ Protections : ${product.protections}
‚Ä¢ Doublure : ${product.doublure}
‚Ä¢ Mati√®re : ${product.matiere}
\\n
\\n
üîó <strong><a href="https://sunsetridershop.com/guide-des-tailles/" target="_blank" rel="noopener noreferrer"><u>Guide des tailles</u></a></strong>",
    "seotitle": "${product.nom_produit} - ${product.genre === "female" ? 'Femme' : product.genre === "male" ? 'Homme' : 'Unisexe'} -  [expression cl√© SEO variable]
 ‚û°Ô∏è L'expression cl√© SEO peut varier entre :
        - √©quipement moto seconde main
        - pantalon moto d‚Äôoccasion
        - blouson moto cuir femme seconde main
        - v√™tement motarde reconditionn√©
        - etc.
        Voici un exemple de titreSEO : "alpinestars bionic plus - m homme - seconde main"
        IMPORTANT : le seotitle ne doit pas d√©passer 55 caract√®res (espaces compris) et doit √™tre optimis√© pour le SEO. Il doit contenir l'expression cl√© SEO choisie.
        ",
    "seoRegularExpression": "
        IMPORTANT : le seoRegularExpression doit √™tre optimis√© pour le SEO. Il doit etre structur√© comme suit : [La cat√©gorie du produit] + ${product.nom_produit} + ${product.genre} +  [expression cl√© SEO variable]
         ‚û°Ô∏è L'expression cl√© SEO peut varier entre :
        - seconde main
        - occasion
        - reconditionn√©
        - etc.
        ",
    "seoMetaDescription": "140 √† 155 caract√®res (espaces compris) - Optimis√© SEO Yoast. Unique, fluide, sans r√©p√©tition, avec mots-cl√©s pertinents, r√©sum√© clair et concis du produit, sans majuscule abusives, sans fautes d'orthographe, sans r√©p√©titions, sans balises HTML, sans mise en forme markdown. Doit contenir l'expression cl√© SEO choisie."
}`.trim();


    try {
        const response = await axios.post(
            "https://api.openai.com/v1/chat/completions",
            {
                model: "gpt-4o",
                messages: [
                    { role: "system", content: "Tu es en charge de r√©diger des annonces WooCommerce pour un site de vente d‚Äô√©quipement moto de seconde main reconditionn√© : SUNSET RIDER" },
                    { role: "user", content: prompt }
                ],
                temperature: 1.2
            },
            {
                headers: {
                    Authorization: `Bearer ${config.openaiApiKey}`,
                    "Content-Type": "application/json"
                }
            }
        );

        let generatedText = response.data.choices[0].message.content.trim();
        generatedText = generatedText.replace(/```json|```/g, '').trim();

        let generatedJSON;
        try {
            generatedJSON = JSON.parse(generatedText);
        } catch (jsonError) {
            console.error("‚ùå Erreur de parsing JSON. R√©ponse brute :", generatedText);
            throw new Error("La r√©ponse de ChatGPT n'√©tait pas un JSON valide.");
        }

        // On v√©rifie que toutes les cl√©s attendues sont pr√©sentes :
        if (!generatedJSON.longdesc || !generatedJSON.shortdesc) {
            console.error("‚ùå JSON incomplet :", generatedJSON);
            throw new Error("Le JSON ne contient pas toutes les cl√©s attendues.");
        }

        console.log("‚úÖ Contenu g√©n√©r√© :", generatedJSON);
        return generatedJSON;

    } catch (error) {
        console.error("‚ùå Erreur lors de l'appel OpenAI :", error.response ? error.response.data : error.message);
        throw error;
    }
};